<?php
/*
 * Created on Aug 7, 2013
 *
 * To change the template for this generated file go to
 * Window - Preferences - PHPeclipse - PHP - Code Templates
 */

function pickem_init() {
	
}

function pickem_menu() {
	$items = array(
		'admin/config/pickem' => array(
			'title' => 'Pickem Administration',
			'description' => 'Adjust settings for your Pickem environment',
			'position' => 'right',
			'weight' => -5,
			'page callback' => 'system_admin_menu_block_page',
			'access arguments' => array('administer pickem settings'),
			'access callback' => TRUE,
			'file' => 'system.admin.inc',
			'file path' => drupal_get_path('module', 'system'),
		),
		'admin/config/pickem/settings' => array(
			'title' => 'Pickem Settings',
			'description' => 'Configure the settings for this Pickem',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_admin_settings'),
			'access callback' => 'pickem_admin_access',
			'access arguments' => array('administer pickem settings'),
			'file' => 'pickem.admin.inc',
		),
		'admin/config/pickem/games' => array(
			'title' => 'Games Management',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_admin'),
			'access arguments' => array('administer pickem games'),
			'access callback' => 'pickem_admin_access',
			'type' => MENU_NORMAL_ITEM,   
		),
		'admin/config/pickem/games/%pickem_game/edit' => array(
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_game_edit', 4),
			'access callback' => TRUE,
			'type' => MENU_CALLBACK,
		),
		'admin/structure/pickem' => array(
			'title' => 'Pickem',
			'page callback' => 'pickem_overview',
			'access callback' => TRUE,
		),
		'admin/structure/pickem/schools' => array(
			'title' => 'Schools',
			'description' => 'List of schools',
			'page callback' => 'pickem_school_list',
			'access callback' => TRUE,
			'file' => 'pickem.school.inc',
		),
		'admin/structure/pickem/games/conf' => array(
			'title' => 'Games - By Conference',
			'page callback' => 'pickem_games_conf_listing',
			'access callback' => TRUE,
		),
		'admin/structure/pickem/games/week' => array(
			'title' => 'Scoreboard - By Week',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing'),
			'access callback' => TRUE,
		),
		'pickem/games/week' => array(
			'title' => 'Scoreboard - By Week',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 2),
			'access callback' => TRUE,
		),
		'pickem/games/conf' => array(
			'title' => 'Scoreboard - By Conference',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 2),
			'access callback' => TRUE,
		),
		'pickem/schools' => array(
			'title callback' => 'pickem_school_page_title',
			'page callback' => 'pickem_school_listing',
			'access callback' => TRUE,
			'file' => 'pickem.school.inc',
		)
	);
	
	$result = db_query("SELECT name, title, displaytitle FROM conference WHERE name IN ('acc','sec','big10','big12','pac12','ind') order by name");
	foreach ($result as $conf) {
		$items['admin/structure/pickem/games/conf/' . $conf->name] = array(
			'title' => $conf->displaytitle,
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 4, 5),
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
		);
		$items['pickem/schools/'.$conf->name] = array(
			'title callback' => 'pickem_school_page_title',
			'title arguments' => array($conf->name),
			'page arguments' => array(2),
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
		);
	}
	$result = db_query('SELECT DISTINCT week FROM {game} WHERE season = :season ORDER BY week', array(':season' => variable_get('pickem.current_season')));
	foreach($result as $week) {
		$weekkey = sprintf("WK%2d", $week->week);
		$items['admin/structure/pickem/games/week/' . $week->week] = array(
			'title' => $weekkey,
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 4, 5),
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
		);
		$items['pickem/games/week/' . $week->week] = array(
			'title' => $weekkey,
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 2, 3),
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
		);
	}
	return $items;
}

function pickem_school_page_title($conf = NULL) {
	if ($conf != NULL) {
		$result = db_query("SELECT displaytitle FROM {conference} WHERE name = :conf", array(':conf' => $conf));
		$c = $result->fetchObject();
		return $c->displaytitle;
	} else {
		return 'Schools';
	}
}

function pickem_admin_access() {
	global $user;

	$arguments = func_get_args();
	$account = array_shift($arguments);
	if ($user->uid == 1) {
		return TRUE;
	}
	foreach($arguments as $permission) {
		if(!user_access($permission)) {
			return FALSE;
		}
	}
	return TRUE;
}

function pickem_games_listing($form, &$form_state, $objtype = NULL, $objval = NULL) {
	drupal_add_library('system', 'drupal.ajax');
	
	if ($objtype == 'week') {
		$objval = ($objval == NULL) ? 1 : $objval;
	} else if ($objtype == 'conf') {
		$objval = ($objval == NULL) ? variable_get('pickem.default_conference') : $objval;
	}
	
	# tip from https://drupal.org/node/1253688#comment-4882652
	$subquery = db_select('slate', 'sl');
	$subquery->addField('sl', 'slate_id', 'slate_id');
	$subquery->addField('sl', 'gid', 'slate_gid');
	if ($objtype == 'week') {
		$subquery->condition('slate_id', $objval);
	}
		
	$query = db_select('game', 'g')->extend('PagerDefault')->extend('TableSort');
	$query->leftJoin($subquery, 'sl', 'g.gid = sl.slate_gid');

	$query->join('school', 'host', 'g.host_school_name = host.name');
	$query->join('school', 'visiting', 'g.visiting_school_name = visiting.name');
	
	$query->fields('g');
	$query->addField('host', 'displaytitle', 'host_school');
	$query->addField('visiting', 'displaytitle', 'visiting_school');
	$query->addField('sl', 'slate_id', 'slate_id');
	$query->orderBy('game_date');
	
	if ($objtype != NULL) {
		if ($objtype == 'week') {
			$query->condition('week', $objval);
		} else if ($objtype == 'conf') {
			$or = db_or();
			$or->condition('host_conf_name', $objval);
			$or->condition('visiting_conf_name', $objval);
			$query->condition($or);
		}
	}
	$query->limit(15);
	$result = $query->execute();

	$headers = array(
		t('Date'),
		t('Day'),
		t('Home'),
		t('Score'),
		t('Visitor'),
		t('Score'),
		t('Status'),
		t('Location'),
		t('Options'),
	);
	
	$rows = array();
	
	while($record = $result->fetchObject()) {
		$record->game_date_str = date('M j, Y', $record->game_date);
		$record->kickoff_time = date('g:i A', $record->game_date);
		if ($record->kickoff_time == '12:00 AM') {
			$record->kickoff_time = 'TBA';
		}
		$record->game_day = date('D', $record->game_date);

		$game_title = $record->visiting_school;
		if ($record->neutral) {
			$game_title .= ' vs ';
		} else {
			$game_title .= ' at ';
		}
		$game_title .= $record->host_school;
		$game_status = $record->completed == 'Y' ? 'F' : $record->kickoff_time;
		$record->host_score = $record->host_score == '' ? '-' : $record->host_score;
		$record->visiting_score = $record->visiting_score == '' ? '-' : $record->visiting_score;
		watchdog('games list', print_r($record, TRUE));
	
		$game_classes = array();
		if ($record->completed == 'Y') {
			$game_classes[] = 'game-complete';
		}

		$rows[] = array(
			'data' => array(
				$record->game_date_str,
				$record->game_day,
				$record->host_school,
				$record->host_score,
				$record->visiting_school,
				$record->visiting_score,
				$game_status,
				$record->location,
				'',
			),
			'classes' => $game_classes,
		);
		#kpr($record);
	}
	
	$form['slate'] = array(
		'#theme' => 'table',
		'#header' => $headers,
		'#rows' => $rows,
	);
	$form['pager'] = array(
		'#theme' => 'pager',
	);
	return $form;
}

function pickem_permission() {
	return array(
		'administer pickem settings' => array(
			'title' => t('Administer Pickem Setttings'),
			'description' => t('Perform administration tasks on Pickem settings'),
		),
		'administer pickem games' => array(
			'title' => t('Administer Pickem Games'),
			'description' => t('Perform administration tasks on Pickem games'),
		),
	);
}
 
function pickem_block_info($delta='') {
	return array();
}

