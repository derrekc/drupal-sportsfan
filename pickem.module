<?php
/*
 * Created on Aug 7, 2013
 *
 * To change the template for this generated file go to
 * Window - Preferences - PHPeclipse - PHP - Code Templates
 */

require_once(drupal_get_path('module', 'pickem') . '/pickem.model.inc');

function pickem_init() {
	
}

function pickem_theme() {
	return array(
		'game_title' => array(
			'variables' => array('game' => NULL),
			'template' => 'game_title',
			'path' => drupal_get_path('module', 'pickem') . '/theme',
		),
	);
}

function pickem_menu() {
	$items = array(
		'admin/config/pickem' => array(
			'title' => 'Pickem Administration',
			'description' => 'Adjust settings for your Pickem environment',
			'position' => 'right',
			'weight' => -5,
			'page callback' => 'system_admin_menu_block_page',
			'access arguments' => array('administer pickem settings'),
			'access callback' => TRUE,
			'file' => 'system.admin.inc',
			'file path' => drupal_get_path('module', 'system'),
		),
		'admin/config/pickem/settings' => array(
			'title' => 'Pickem Settings',
			'description' => 'Configure the settings for this Pickem',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_admin_settings'),
			'access callback' => 'pickem_admin_access',
			'access arguments' => array('administer pickem settings'),
			'file' => 'pickem.admin.inc',
		),
		'admin/config/pickem/games' => array(
			'title' => 'Games Management',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_admin'),
			'access arguments' => array('administer pickem games'),
			'access callback' => 'pickem_admin_access',
			'type' => MENU_NORMAL_ITEM,   
		),
		'admin/config/pickem/games/%pickem_game/edit' => array(
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_game_edit', 4),
			'access callback' => TRUE,
			'type' => MENU_CALLBACK,
		),
		# Add the "Pickem" link to the admin menu
		'admin/pickem' => array(
			'title' => 'Pickem',
			'page callback' => 'pickem_overview',
			'access callback' => TRUE,
			'weight' => -5,
		),
		'admin/pickem/schools' => array(
			'title' => 'Schools',
			'description' => 'List of schools',
			'page callback' => 'pickem_school_list',
			'access callback' => TRUE,
			'file' => 'pickem.school.inc',
		),
		'admin/pickem/games/conf' => array(
			'title' => 'Games - By Conference',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 3),
			'access callback' => 'pickem_admin_access',
			'access arguments' => array('administer pickem games'),
		),
		'admin/pickem/games/week' => array(
			'title' => 'Scoreboard - By Week',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 3),
			'access callback' => TRUE,
		),
		# end Pickem link in admin menu
		
		'pickem/games/week' => array(
			'title' => 'Scoreboard - By Week',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 2),
			'access callback' => TRUE,
		),
		'pickem/games/conf' => array(
			'title' => 'Scoreboard - By Conference',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 2),
			'access callback' => TRUE,
		),
		'pickem/games/conf/all' => array(
			'title' => 'All',
			'access callback' => TRUE,
			'type' => MENU_DEFAULT_LOCAL_TASK,
			'weight' => -10,
		),
		'pickem/schools' => array(
			'title callback' => 'pickem_school_page_title',
			'page callback' => 'pickem_school_listing',
			'access callback' => TRUE,
			'file' => 'pickem.school.inc',
			'menu_name' => 'Main menu',
		),
		'pickem/schools/all' => array(
			'title' => 'All',
			'type' => MENU_DEFAULT_LOCAL_TASK,
			'access callback' => TRUE,
			'weight' => -10,
		),
		'pickem/slate' => array(
			'title' => 'Pick Slate',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_slate_listing'),
			'access callback' => TRUE,
		),
		'pickem/slate/all' => array(
			'title' => 'All',
			'type' => MENU_LOCAL_TASK,
			'access callback' => TRUE,
			'weight' => -10,
		),
		'pickem/ajax/slate/add' => array(
			'type' => MENU_CALLBACK,
			'page callback' => 'pickem_ajax_slate_add',
			'page arguments' => array(4),	# gid
			'access callback' => TRUE,
		),
		'pickem/ajax/slate/remove' => array(
			'type' => MENU_CALLBACK,
			'page callback' => 'pickem_ajax_slate_remove',
			'page arguments' => array(4),	# gid
			'access callback' => TRUE,
		),
	);	
	$result = db_query("SELECT name, title, displaytitle FROM conference WHERE name IN ('acc','sec','big10','big12','pac12','ind') order by title");
	$menu_weight = -6;
	foreach ($result as $conf) {
		$items['admin/pickem/games/conf/' . $conf->name] = array(
			'title' => $conf->displaytitle,
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 3, 4),
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
		);
		$items['pickem/games/conf/' . $conf->name] = array(
			'title' => $conf->displaytitle,
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
			'weight' => $menu_weight,
			'page arguments' => array('pickem_games_listing', 2, 3),
		);
		$items['pickem/schools/'.$conf->name] = array(
			'title callback' => 'pickem_school_page_title',
			'title arguments' => array($conf->name),
			'page arguments' => array(2),
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
			'weight' => $menu_weight++,
		);
	}
	$result = db_query('SELECT DISTINCT week FROM {game} WHERE season = :season ORDER BY week LIMIT 16', array(':season' => variable_get('pickem.current_season')));
	foreach($result as $week) {
		$weekkey = sprintf("%2d", $week->week);
		$items['pickem/slate/'.$week->week] = array(
			'title' => $weekkey,
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_slate_listing', 2),
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
		);
		$items['admin/pickem/games/week/' . $week->week] = array(
			'title' => $weekkey,
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 3, 4),
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
		);
		$items['pickem/games/week/' . $week->week] = array(
			'title' => $weekkey,
			'page callback' => 'drupal_get_form',
			'page arguments' => array('pickem_games_listing', 2, 3),
			'access callback' => TRUE,
			'type' => MENU_LOCAL_TASK,
		);
	}
	return $items;
}

function pickem_slate_listing_submit($form, $form_state) {
	global $user;
	//dpm($form_state);
	foreach ($form_state['values'] as $key => $value) {
		if (substr($key, 0, 3) == 'gid') {
			$gid_data = explode('_', $key);
			if ($form_state['picks'][$gid_data[1]]) {
				// existing pick -- update
				$o = $form_state['picks'][$gid_data[1]];
				$o->pick_school_name = $value['pick_school_name'];
				drupal_write_record('pick', $o, 'pkid');
			} else {
				// new pick
				$o = new stdClass();
				$o->pick_school_name = $value['pick_school_name'];
				$o->uid = $user->uid;
				$o->gid = $gid_data[1];
				$o->week = $form_state['values']['week'];
				drupal_write_record('pick', $o);
			}
		}
	}
	drupal_set_message(t('Your pick selections have been saved.'));
}

function pickem_slate_listing($form, &$form_state, $week = NULL) {
	/*
	if (!user_access('pickem player')) {
		$form['invalid'] = array(
			'#type' => 'markup',
			'#markup' => t('<p>Please register for the Pickem competition.</p>'),
		);
		return $form;
	}
	*/
	drupal_add_library('system', 'drupal.ajax');
	if ($week == NULL) {
		$week = 1;
	}
	drupal_set_title(t('Pick Slate: Week ' . $week));
	$result = pickem_fetch_slate($week);

	$clearrow = TRUE;
	$form['week'] = array(
		'#type' => 'hidden',
		'#value' => $week,
	);
	# keep track of the number of valid picks
	$validPicks = 0;
	$totalGames = 0;
	while($record = $result->fetchObject()) {
		$totalGames++;
		$game_title = $record->visiting_school;
		if ($record->neutral == 'Y') {
			$record->vs_at_symbol = ' vs ';
		} else {
			$record->vs_at_symbol = ' at ';
		}
		$game_title .= $record->host_school;
		$record->game_title = $game_title;

		$record->bline = array();
		if ($record->betting_line) {
			$record->bline = explode(':', $record->betting_line);
		}

		$record->game_date_str = date('M j, Y', $record->game_date);
		$record->kickoff_time = date('g:i A', $record->game_date);
		if ($record->kickoff_time == '12:00 AM') {
			$record->kickoff_time = 'TBA';
		}
		$record->game_day = date('D', $record->game_date);

		$pickIsOpen = TRUE;
		
		$pickOptions = '';
		if ($pickIsOpen) {
			$pickOptions[''] = t('-- Select School --');
			$pickOptions[$record->visiting_school_name] = $record->visiting_school;
			$pickOptions[$record->host_school_name] = $record->host_school;
		}
		
		$form['gid_' . $record->gid] = array(
			'#type' => 'container',
			'#title' => t($game_title),
			'#attributes' => array('class' => array('pickem-entry', 'span6')),
			'#tree' => TRUE,
		);
		$form['gid_' . $record->gid]['game-title'] = array(
			'#type' => 'markup',
			'#markup' => theme('game_title', array('game' => $record)),
		);
		if ($clearrow) {
			$form['gid_' . $record->gid]['#attributes']['class'][] = 'clear-row';
		}
		$clearrow = !$clearrow;
		
		# process the pick school name (when available)
		if ($record->pkid) {
			$ares = db_query('SELECT p.* FROM {pick} p WHERE pkid = :pkid', 
				array(':pkid' => $record->pkid));
				
			$thepick = $ares->fetchObject();
			if (!empty($thepick->pick_school_name)) {
				$validPicks++;
			}
			$form_state['picks'][$record->gid] = $ares->fetchObject();
		} else {
			$form_state['picks'][$record->gid] = NULL;
		}
		
		$form['gid_' . $record->gid]['pkid'] = array(
			'#type' => 'hidden',
			'#default_value' => $record->pkid ? $record->pkid : '',
		);
		$form['gid_' . $record->gid]['pick_school_name'] = array(
			'#type' => 'select',
			'#options' => $pickOptions,
			'#title_display' => 'invisible',
			'#default_value' => $record->pkid ? $record->pick_school_name : '',
		);
	}
	if (($validPicks > 0) && ($validPicks < $totalGames)) {
		// create an element that sites above the games
		drupal_set_message(t('<strong>Warning!</strong> Please be reminded that you have not completed all of your picks'), 'warning');
	}
	$form['totalgames'] = array(
		'#type' => 'hidden',
		'#value' => $totalGames,
	);
	$form['actions'] = array(
		'#type' => 'actions',
		'#attributes' => array('class' => array('span12', 'clear-row')),
	);
	if (user_access('pickem player')) {
		$form['actions']['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Save Picks'),
			'#attributes' => array(
				'class' => array('btn')
			),
		);
	} else {
		$form['actions']['register'] = array(
			'#type' => 'markup',
			'#markup' => t('<p><strong>Please register</strong> in order to save these picks and participate in the World\'s Greatest ACC Pickem Competition.</p>'),
		);
	}
	return $form;
}

function pickem_school_page_title($conf = NULL) {
	if ($conf != NULL) {
		$result = db_query("SELECT displaytitle FROM {conference} WHERE name = :conf", array(':conf' => $conf));
		$c = $result->fetchObject();
		return $c->displaytitle;
	} else {
		return 'Schools';
	}
}

function pickem_admin_access() {
	global $user;

	$arguments = func_get_args();
	$account = array_shift($arguments);
	if ($user->uid == 1) {
		return TRUE;
	}
	foreach($arguments as $permission) {
		if(!user_access($permission)) {
			return FALSE;
		}
	}
	return TRUE;
}

/**
 * Fetch the slate of games for a pickem week
 */
function pickem_fetch_slate($week = NULL) {
	global $user;
	
	$query = db_select('slate', 's')->extend('PagerDefault')->extend('TableSort');
	$query->join('game', 'g', 's.gid = g.gid');
	$query->leftJoin('pick', 'p', 'p.gid = g.gid and p.uid = :uid', array(':uid' => $user->uid));
	$query->join('school', 'host', 'g.host_school_name = host.name');
	$query->join('school', 'visiting', 'g.visiting_school_name = visiting.name');
	$query->leftJoin('school', 'winning', 'g.winning_school_name = winning.name');
	$query->leftJoin('school', 'userpick', 'p.pick_school_name = userpick.name');
	
	$query->fields('g');
	$query->addField('p', 'pick_school_name', 'pick_school_name');
	$query->addField('host', 'displaytitle', 'host_school');
	$query->addField('visiting', 'displaytitle', 'visiting_school');
	$query->addField('winning', 'displaytitle', 'winning_school');
	$query->addField('p', 'pkid');
	$query->orderBy('g.game_date');
	
	$query->condition('s.slate_id', $week);
	$query->limit(25);
	$result = $query->execute();
	return $result;
}

function pickem_fetch_games($week, $conf, $include_slate = TRUE) {
	$query = db_select('game', 'g')->extend('PagerDefault')->extend('TableSort');
	
	if ($include_slate) {
		# tip from https://drupal.org/node/1253688#comment-4882652
		$subquery = db_select('slate', 'sl');
		$subquery->addField('sl', 'slate_id', 'slate_id');
		$subquery->addField('sl', 'gid', 'slate_gid');

		if ($week != NULL) {
			$subquery->condition('slate_id', $week);
		}
		$query->leftJoin($subquery, 'sl', 'g.gid = sl.slate_gid');
		$query->addField('sl', 'slate_id', 'slate_id');
		$query->addField('sl', 'slate_gid', 'slate_game_id');
	}

	$query->join('school', 'host', 'g.host_school_name = host.name');
	$query->join('school', 'visiting', 'g.visiting_school_name = visiting.name');
	
	$query->fields('g');
	$query->addField('host', 'displaytitle', 'host_school');
	$query->addField('visiting', 'displaytitle', 'visiting_school');
	$query->orderBy('game_date');
	
	if ($week != NULL) {
		$query->condition('week', $week);
	}
	if ($conf != NULL) {
		$or = db_or();
		$or->condition('host_conf_name', $conf);
		$or->condition('visiting_conf_name', $conf);
		$query->condition($or);
	}

	$query->limit(15);
	$result = $query->execute();
	
	return $result;
}

function pickem_games_listing($form, &$form_state, $objtype = NULL, $objval = NULL) {
	drupal_add_library('system', 'drupal.ajax');
	
	if ($objtype == 'week') {
		$objval = ($objval == NULL) ? 1 : $objval;
	} else if ($objtype == 'conf') {
		$objval = ($objval == NULL) ? variable_get('pickem.default_conference') : $objval;
	}
	
	$result = NULL;
	if ($objtype == 'week') {
		$result = pickem_fetch_games($objval, NULL);
	} else if ($objtype == 'conf') {
		$result = pickem_fetch_games(NULL, $objval);
	}	

	$headers = array(
		t('Date'),
		t('Day'),
		t('Home'),
		t('Score'),
		t('Visitor'),
		t('Score'),
		t('Status'),
		t('Location'),
	);
	if (path_is_admin(current_path())) {
		$headers[] = t('Options');
	}
	
	$rows = array();
	
	while($record = $result->fetchObject()) {
		$record->game_date_str = date('M j, Y', $record->game_date);
		$record->kickoff_time = date('g:i A', $record->game_date);
		if ($record->kickoff_time == '12:00 AM') {
			$record->kickoff_time = 'TBA';
		}
		$record->game_day = date('D', $record->game_date);

		$game_title = $record->visiting_school;
		if ($record->neutral) {
			$game_title .= ' vs ';
		} else {
			$game_title .= ' at ';
		}
		$game_title .= $record->host_school;
		$game_status = $record->completed == 'Y' ? 'F' : $record->kickoff_time;
		$record->host_score = $record->host_score == '' ? '-' : $record->host_score;
		$record->visiting_score = $record->visiting_score == '' ? '-' : $record->visiting_score;
	
		$game_classes = array();
		if ($record->completed == 'Y') {
			$game_classes[] = 'game-complete';
		}

		$row = array(
			'data' => array(
				$record->game_date_str,
				$record->game_day,
				$record->host_school,
				$record->host_score,
				$record->visiting_school,
				$record->visiting_score,
				$game_status,
				$record->location,
			),
			'classes' => $game_classes,
		);
		if (path_is_admin(current_path())) {
			$linktext = $record->slate_game_id ? 'Remove from Slate' : 'Add To Slate';
			$linkpath = $record->slate_game_id ? 'remove' : 'add';
			$row['data'][] = array(
				'data' => array(
					'#type' => 'link',
					'#title' => t($linktext),
					'#href' => 'pickem/ajax/slate/' . $linkpath . '/' . $record->gid,
					'#ajax' => array(
						'wrapper' => 'slateCell-' . $record->gid,
						'method' => 'html',
					),
				),
				'id' => 'slateCell-' . $record->gid,
			);
			/*
			$row['data'][] = '<div id="slateCell-' . $record->gid . '">' . l(t($linktext), 'pickem/ajax/slate/' . $linkpath . '/' . $record->gid, 
				array(
					'attributes' => array(
						'class' => array('slateTrigger','use-ajax')
					)
				)
			) . '</div>';
			*/
		}
		$rows[] = $row;
		#kpr($record);
	}
	
	$form['slate'] = array(
		'#theme' => 'table',
		'#header' => $headers,
		'#rows' => $rows,
	);
	$form['pager'] = array(
		'#theme' => 'pager',
	);
	return $form;
}

function pickem_ajax_slate_add($gid) {
	// got a game id -- let's add the game to the slate..
	$game = pickem_load_game($gid);
	$o = new stdClass();
	$o->pid = 1;
	$o->gid = $gid;
	$o->season = $game->season;
	$o->slate_id = $game->week;
	$res = drupal_write_record('slate', $o);
	
	$commands = array();
	$msg = "Remove from Slate";
	if ($res == FALSE) {
		$commands[] = ajax_command_append('#slateCell-' . $gid, t('Unable to add to slate!'));
	} else {
		$output = array(
			'#type' => 'link',
			'#title' => t($msg),
			'#href' => 'pickem/ajax/slate/remove/' . $gid,
			'#attributes' => array('class' => array('use-ajax', 'slateTrigger')),
			'#ajax' => array(
				'wrapper' => 'slateCell-' . $gid,
				'method' => 'html',
			),
		);
		$commands[] = ajax_command_html('#slateCell-' . $gid, render($output));
	}
	// See ajax_example_advanced.inc for more details on the available commands
	// and how to use them.
	$page = array(
		'#type' => 'ajax',
		'#commands' => $commands,
	);
	ajax_deliver($page);
}

function pickem_ajax_slate_remove($gid) {
	$result = db_query('SELECT s.* FROM {slate} s WHERE gid = :gid', array(':gid' => $gid));
	$slate = $result->fetchObject();
	$game = pickem_load_game($gid);
	$default_conf_name = variable_get('pickem.default_conference');
	$protected_schools = variable_get('pickem.protected_schools');
	$commands = array();
	#if ($game->host_conf_name == $default_conf_name || 
	#		$game->visiting_conf_name == $default_conf_name) {
	if (in_array($default_conf_name, array($game->host_conf_name, $game->visiting_conf_name))) {
		$commands[] = ajax_command_alert(t("Games involving ACC schools cannot be removed from the slate."));
	} else if (in_array($game->host_school_name, $protected_schools) || 
						 in_array($game->visiting_school_name, $protected_schools)) {
		$commands[] = ajax_command_alert(t('Games involving protected schools cannot be removed from the slate.'));
	} else {
		$num_deleted = db_delete('slate')
			->condition('gid', $gid)
			->condition('pid', '1')
			->execute();

		$msg = "Add to Slate";
		$output = array(
			'#type' => 'link',
			'#title' => t($msg),
			'#href' => 'pickem/ajax/slate/add/' . $gid,
			'#attributes' => array('class' => array('use-ajax', 'slateTrigger')),
			'#ajax' => array(
				'wrapper' => 'slateCell-' . $gid,
				'method' => 'html',
			),
		);
		$commands[] = ajax_command_html('#slateCell-' . $gid, render($output));
	}
	$page = array(
		'#type' => 'ajax',
		'#commands' => $commands,
	);
	ajax_deliver($page);
}

function pickem_permission() {
	return array(
		'administer pickem settings' => array(
			'title' => t('Administer Pickem Setttings'),
			'description' => t('Perform administration tasks on Pickem settings'),
		),
		'administer pickem games' => array(
			'title' => t('Administer Pickem Games'),
			'description' => t('Perform administration tasks on Pickem games'),
		),
		'pickem player' => array(
			'title' => t('Make picks in the pickem contest'),
			'description' => t('Can play the pickem content(s)'),
		),
	);
}
 
function pickem_block_info($delta='') {
	return array();
}
